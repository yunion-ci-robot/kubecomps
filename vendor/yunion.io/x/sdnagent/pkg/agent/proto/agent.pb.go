// Copyright 2019 Yunion
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Mesg                 string   `protobuf:"bytes,2,opt,name=mesg,proto3" json:"mesg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{0}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMesg() string {
	if m != nil {
		return m.Mesg
	}
	return ""
}

type AddBridgeRequest struct {
	Bridge               string   `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBridgeRequest) Reset()         { *m = AddBridgeRequest{} }
func (m *AddBridgeRequest) String() string { return proto.CompactTextString(m) }
func (*AddBridgeRequest) ProtoMessage()    {}
func (*AddBridgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{1}
}
func (m *AddBridgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBridgeRequest.Unmarshal(m, b)
}
func (m *AddBridgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBridgeRequest.Marshal(b, m, deterministic)
}
func (dst *AddBridgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBridgeRequest.Merge(dst, src)
}
func (m *AddBridgeRequest) XXX_Size() int {
	return xxx_messageInfo_AddBridgeRequest.Size(m)
}
func (m *AddBridgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBridgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddBridgeRequest proto.InternalMessageInfo

func (m *AddBridgeRequest) GetBridge() string {
	if m != nil {
		return m.Bridge
	}
	return ""
}

type DelBridgeRequest struct {
	Bridge               string   `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelBridgeRequest) Reset()         { *m = DelBridgeRequest{} }
func (m *DelBridgeRequest) String() string { return proto.CompactTextString(m) }
func (*DelBridgeRequest) ProtoMessage()    {}
func (*DelBridgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{2}
}
func (m *DelBridgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelBridgeRequest.Unmarshal(m, b)
}
func (m *DelBridgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelBridgeRequest.Marshal(b, m, deterministic)
}
func (dst *DelBridgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelBridgeRequest.Merge(dst, src)
}
func (m *DelBridgeRequest) XXX_Size() int {
	return xxx_messageInfo_DelBridgeRequest.Size(m)
}
func (m *DelBridgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelBridgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelBridgeRequest proto.InternalMessageInfo

func (m *DelBridgeRequest) GetBridge() string {
	if m != nil {
		return m.Bridge
	}
	return ""
}

type AddBridgePortRequest struct {
	Bridge               string   `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBridgePortRequest) Reset()         { *m = AddBridgePortRequest{} }
func (m *AddBridgePortRequest) String() string { return proto.CompactTextString(m) }
func (*AddBridgePortRequest) ProtoMessage()    {}
func (*AddBridgePortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{3}
}
func (m *AddBridgePortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBridgePortRequest.Unmarshal(m, b)
}
func (m *AddBridgePortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBridgePortRequest.Marshal(b, m, deterministic)
}
func (dst *AddBridgePortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBridgePortRequest.Merge(dst, src)
}
func (m *AddBridgePortRequest) XXX_Size() int {
	return xxx_messageInfo_AddBridgePortRequest.Size(m)
}
func (m *AddBridgePortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBridgePortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddBridgePortRequest proto.InternalMessageInfo

func (m *AddBridgePortRequest) GetBridge() string {
	if m != nil {
		return m.Bridge
	}
	return ""
}

func (m *AddBridgePortRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type DelBridgePortRequest struct {
	Bridge               string   `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelBridgePortRequest) Reset()         { *m = DelBridgePortRequest{} }
func (m *DelBridgePortRequest) String() string { return proto.CompactTextString(m) }
func (*DelBridgePortRequest) ProtoMessage()    {}
func (*DelBridgePortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{4}
}
func (m *DelBridgePortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelBridgePortRequest.Unmarshal(m, b)
}
func (m *DelBridgePortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelBridgePortRequest.Marshal(b, m, deterministic)
}
func (dst *DelBridgePortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelBridgePortRequest.Merge(dst, src)
}
func (m *DelBridgePortRequest) XXX_Size() int {
	return xxx_messageInfo_DelBridgePortRequest.Size(m)
}
func (m *DelBridgePortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelBridgePortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelBridgePortRequest proto.InternalMessageInfo

func (m *DelBridgePortRequest) GetBridge() string {
	if m != nil {
		return m.Bridge
	}
	return ""
}

func (m *DelBridgePortRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type AddFlowRequest struct {
	Bridge               string   `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	Flow                 *Flow    `protobuf:"bytes,2,opt,name=flow,proto3" json:"flow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFlowRequest) Reset()         { *m = AddFlowRequest{} }
func (m *AddFlowRequest) String() string { return proto.CompactTextString(m) }
func (*AddFlowRequest) ProtoMessage()    {}
func (*AddFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{5}
}
func (m *AddFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFlowRequest.Unmarshal(m, b)
}
func (m *AddFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFlowRequest.Marshal(b, m, deterministic)
}
func (dst *AddFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFlowRequest.Merge(dst, src)
}
func (m *AddFlowRequest) XXX_Size() int {
	return xxx_messageInfo_AddFlowRequest.Size(m)
}
func (m *AddFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFlowRequest proto.InternalMessageInfo

func (m *AddFlowRequest) GetBridge() string {
	if m != nil {
		return m.Bridge
	}
	return ""
}

func (m *AddFlowRequest) GetFlow() *Flow {
	if m != nil {
		return m.Flow
	}
	return nil
}

type DelFlowRequest struct {
	Bridge               string   `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	Flow                 *Flow    `protobuf:"bytes,2,opt,name=flow,proto3" json:"flow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelFlowRequest) Reset()         { *m = DelFlowRequest{} }
func (m *DelFlowRequest) String() string { return proto.CompactTextString(m) }
func (*DelFlowRequest) ProtoMessage()    {}
func (*DelFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{6}
}
func (m *DelFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelFlowRequest.Unmarshal(m, b)
}
func (m *DelFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelFlowRequest.Marshal(b, m, deterministic)
}
func (dst *DelFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelFlowRequest.Merge(dst, src)
}
func (m *DelFlowRequest) XXX_Size() int {
	return xxx_messageInfo_DelFlowRequest.Size(m)
}
func (m *DelFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelFlowRequest proto.InternalMessageInfo

func (m *DelFlowRequest) GetBridge() string {
	if m != nil {
		return m.Bridge
	}
	return ""
}

func (m *DelFlowRequest) GetFlow() *Flow {
	if m != nil {
		return m.Flow
	}
	return nil
}

type SyncFlowsRequest struct {
	Bridge               string   `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncFlowsRequest) Reset()         { *m = SyncFlowsRequest{} }
func (m *SyncFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*SyncFlowsRequest) ProtoMessage()    {}
func (*SyncFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{7}
}
func (m *SyncFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncFlowsRequest.Unmarshal(m, b)
}
func (m *SyncFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncFlowsRequest.Marshal(b, m, deterministic)
}
func (dst *SyncFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncFlowsRequest.Merge(dst, src)
}
func (m *SyncFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_SyncFlowsRequest.Size(m)
}
func (m *SyncFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncFlowsRequest proto.InternalMessageInfo

func (m *SyncFlowsRequest) GetBridge() string {
	if m != nil {
		return m.Bridge
	}
	return ""
}

type Flow struct {
	Cookie               uint64   `protobuf:"varint,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Priority             uint32   `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Table                uint32   `protobuf:"varint,3,opt,name=table,proto3" json:"table,omitempty"`
	Matches              string   `protobuf:"bytes,4,opt,name=matches,proto3" json:"matches,omitempty"`
	Actions              string   `protobuf:"bytes,5,opt,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flow) Reset()         { *m = Flow{} }
func (m *Flow) String() string { return proto.CompactTextString(m) }
func (*Flow) ProtoMessage()    {}
func (*Flow) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{8}
}
func (m *Flow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flow.Unmarshal(m, b)
}
func (m *Flow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flow.Marshal(b, m, deterministic)
}
func (dst *Flow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flow.Merge(dst, src)
}
func (m *Flow) XXX_Size() int {
	return xxx_messageInfo_Flow.Size(m)
}
func (m *Flow) XXX_DiscardUnknown() {
	xxx_messageInfo_Flow.DiscardUnknown(m)
}

var xxx_messageInfo_Flow proto.InternalMessageInfo

func (m *Flow) GetCookie() uint64 {
	if m != nil {
		return m.Cookie
	}
	return 0
}

func (m *Flow) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Flow) GetTable() uint32 {
	if m != nil {
		return m.Table
	}
	return 0
}

func (m *Flow) GetMatches() string {
	if m != nil {
		return m.Matches
	}
	return ""
}

func (m *Flow) GetActions() string {
	if m != nil {
		return m.Actions
	}
	return ""
}

type PortStats struct {
	PortNo               uint32   `protobuf:"varint,1,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortStats) Reset()         { *m = PortStats{} }
func (m *PortStats) String() string { return proto.CompactTextString(m) }
func (*PortStats) ProtoMessage()    {}
func (*PortStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{9}
}
func (m *PortStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortStats.Unmarshal(m, b)
}
func (m *PortStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortStats.Marshal(b, m, deterministic)
}
func (dst *PortStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortStats.Merge(dst, src)
}
func (m *PortStats) XXX_Size() int {
	return xxx_messageInfo_PortStats.Size(m)
}
func (m *PortStats) XXX_DiscardUnknown() {
	xxx_messageInfo_PortStats.DiscardUnknown(m)
}

var xxx_messageInfo_PortStats proto.InternalMessageInfo

func (m *PortStats) GetPortNo() uint32 {
	if m != nil {
		return m.PortNo
	}
	return 0
}

type DumpBridgePortRequest struct {
	Bridge               string   `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpBridgePortRequest) Reset()         { *m = DumpBridgePortRequest{} }
func (m *DumpBridgePortRequest) String() string { return proto.CompactTextString(m) }
func (*DumpBridgePortRequest) ProtoMessage()    {}
func (*DumpBridgePortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{10}
}
func (m *DumpBridgePortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpBridgePortRequest.Unmarshal(m, b)
}
func (m *DumpBridgePortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpBridgePortRequest.Marshal(b, m, deterministic)
}
func (dst *DumpBridgePortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpBridgePortRequest.Merge(dst, src)
}
func (m *DumpBridgePortRequest) XXX_Size() int {
	return xxx_messageInfo_DumpBridgePortRequest.Size(m)
}
func (m *DumpBridgePortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpBridgePortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpBridgePortRequest proto.InternalMessageInfo

func (m *DumpBridgePortRequest) GetBridge() string {
	if m != nil {
		return m.Bridge
	}
	return ""
}

func (m *DumpBridgePortRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type DumpBridgePortResponse struct {
	Code                 uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Mesg                 string     `protobuf:"bytes,2,opt,name=mesg,proto3" json:"mesg,omitempty"`
	PortStats            *PortStats `protobuf:"bytes,3,opt,name=port_stats,json=portStats,proto3" json:"port_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DumpBridgePortResponse) Reset()         { *m = DumpBridgePortResponse{} }
func (m *DumpBridgePortResponse) String() string { return proto.CompactTextString(m) }
func (*DumpBridgePortResponse) ProtoMessage()    {}
func (*DumpBridgePortResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_3f2a378016922cd7, []int{11}
}
func (m *DumpBridgePortResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpBridgePortResponse.Unmarshal(m, b)
}
func (m *DumpBridgePortResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpBridgePortResponse.Marshal(b, m, deterministic)
}
func (dst *DumpBridgePortResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpBridgePortResponse.Merge(dst, src)
}
func (m *DumpBridgePortResponse) XXX_Size() int {
	return xxx_messageInfo_DumpBridgePortResponse.Size(m)
}
func (m *DumpBridgePortResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpBridgePortResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DumpBridgePortResponse proto.InternalMessageInfo

func (m *DumpBridgePortResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DumpBridgePortResponse) GetMesg() string {
	if m != nil {
		return m.Mesg
	}
	return ""
}

func (m *DumpBridgePortResponse) GetPortStats() *PortStats {
	if m != nil {
		return m.PortStats
	}
	return nil
}

func init() {
	proto.RegisterType((*Response)(nil), "pb.Response")
	proto.RegisterType((*AddBridgeRequest)(nil), "pb.AddBridgeRequest")
	proto.RegisterType((*DelBridgeRequest)(nil), "pb.DelBridgeRequest")
	proto.RegisterType((*AddBridgePortRequest)(nil), "pb.AddBridgePortRequest")
	proto.RegisterType((*DelBridgePortRequest)(nil), "pb.DelBridgePortRequest")
	proto.RegisterType((*AddFlowRequest)(nil), "pb.AddFlowRequest")
	proto.RegisterType((*DelFlowRequest)(nil), "pb.DelFlowRequest")
	proto.RegisterType((*SyncFlowsRequest)(nil), "pb.SyncFlowsRequest")
	proto.RegisterType((*Flow)(nil), "pb.Flow")
	proto.RegisterType((*PortStats)(nil), "pb.PortStats")
	proto.RegisterType((*DumpBridgePortRequest)(nil), "pb.DumpBridgePortRequest")
	proto.RegisterType((*DumpBridgePortResponse)(nil), "pb.DumpBridgePortResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VSwitchClient is the client API for VSwitch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VSwitchClient interface {
	AddBridge(ctx context.Context, in *AddBridgeRequest, opts ...grpc.CallOption) (*Response, error)
	DelBridge(ctx context.Context, in *DelBridgeRequest, opts ...grpc.CallOption) (*Response, error)
	AddBridgePort(ctx context.Context, in *AddBridgePortRequest, opts ...grpc.CallOption) (*Response, error)
	DelBridgePort(ctx context.Context, in *DelBridgePortRequest, opts ...grpc.CallOption) (*Response, error)
}

type vSwitchClient struct {
	cc *grpc.ClientConn
}

func NewVSwitchClient(cc *grpc.ClientConn) VSwitchClient {
	return &vSwitchClient{cc}
}

func (c *vSwitchClient) AddBridge(ctx context.Context, in *AddBridgeRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.VSwitch/AddBridge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vSwitchClient) DelBridge(ctx context.Context, in *DelBridgeRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.VSwitch/DelBridge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vSwitchClient) AddBridgePort(ctx context.Context, in *AddBridgePortRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.VSwitch/AddBridgePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vSwitchClient) DelBridgePort(ctx context.Context, in *DelBridgePortRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.VSwitch/DelBridgePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VSwitchServer is the server API for VSwitch service.
type VSwitchServer interface {
	AddBridge(context.Context, *AddBridgeRequest) (*Response, error)
	DelBridge(context.Context, *DelBridgeRequest) (*Response, error)
	AddBridgePort(context.Context, *AddBridgePortRequest) (*Response, error)
	DelBridgePort(context.Context, *DelBridgePortRequest) (*Response, error)
}

func RegisterVSwitchServer(s *grpc.Server, srv VSwitchServer) {
	s.RegisterService(&_VSwitch_serviceDesc, srv)
}

func _VSwitch_AddBridge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBridgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VSwitchServer).AddBridge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.VSwitch/AddBridge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VSwitchServer).AddBridge(ctx, req.(*AddBridgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VSwitch_DelBridge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelBridgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VSwitchServer).DelBridge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.VSwitch/DelBridge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VSwitchServer).DelBridge(ctx, req.(*DelBridgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VSwitch_AddBridgePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBridgePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VSwitchServer).AddBridgePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.VSwitch/AddBridgePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VSwitchServer).AddBridgePort(ctx, req.(*AddBridgePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VSwitch_DelBridgePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelBridgePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VSwitchServer).DelBridgePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.VSwitch/DelBridgePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VSwitchServer).DelBridgePort(ctx, req.(*DelBridgePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VSwitch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.VSwitch",
	HandlerType: (*VSwitchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBridge",
			Handler:    _VSwitch_AddBridge_Handler,
		},
		{
			MethodName: "DelBridge",
			Handler:    _VSwitch_DelBridge_Handler,
		},
		{
			MethodName: "AddBridgePort",
			Handler:    _VSwitch_AddBridgePort_Handler,
		},
		{
			MethodName: "DelBridgePort",
			Handler:    _VSwitch_DelBridgePort_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}

// OpenflowClient is the client API for Openflow service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OpenflowClient interface {
	AddFlow(ctx context.Context, in *AddFlowRequest, opts ...grpc.CallOption) (*Response, error)
	DelFlow(ctx context.Context, in *DelFlowRequest, opts ...grpc.CallOption) (*Response, error)
	SyncFlows(ctx context.Context, in *SyncFlowsRequest, opts ...grpc.CallOption) (*Response, error)
	DumpBridgePort(ctx context.Context, in *DumpBridgePortRequest, opts ...grpc.CallOption) (*DumpBridgePortResponse, error)
}

type openflowClient struct {
	cc *grpc.ClientConn
}

func NewOpenflowClient(cc *grpc.ClientConn) OpenflowClient {
	return &openflowClient{cc}
}

func (c *openflowClient) AddFlow(ctx context.Context, in *AddFlowRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.Openflow/AddFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openflowClient) DelFlow(ctx context.Context, in *DelFlowRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.Openflow/DelFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openflowClient) SyncFlows(ctx context.Context, in *SyncFlowsRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.Openflow/SyncFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openflowClient) DumpBridgePort(ctx context.Context, in *DumpBridgePortRequest, opts ...grpc.CallOption) (*DumpBridgePortResponse, error) {
	out := new(DumpBridgePortResponse)
	err := c.cc.Invoke(ctx, "/pb.Openflow/DumpBridgePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OpenflowServer is the server API for Openflow service.
type OpenflowServer interface {
	AddFlow(context.Context, *AddFlowRequest) (*Response, error)
	DelFlow(context.Context, *DelFlowRequest) (*Response, error)
	SyncFlows(context.Context, *SyncFlowsRequest) (*Response, error)
	DumpBridgePort(context.Context, *DumpBridgePortRequest) (*DumpBridgePortResponse, error)
}

func RegisterOpenflowServer(s *grpc.Server, srv OpenflowServer) {
	s.RegisterService(&_Openflow_serviceDesc, srv)
}

func _Openflow_AddFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenflowServer).AddFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Openflow/AddFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenflowServer).AddFlow(ctx, req.(*AddFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Openflow_DelFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenflowServer).DelFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Openflow/DelFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenflowServer).DelFlow(ctx, req.(*DelFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Openflow_SyncFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncFlowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenflowServer).SyncFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Openflow/SyncFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenflowServer).SyncFlows(ctx, req.(*SyncFlowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Openflow_DumpBridgePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpBridgePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenflowServer).DumpBridgePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Openflow/DumpBridgePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenflowServer).DumpBridgePort(ctx, req.(*DumpBridgePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Openflow_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Openflow",
	HandlerType: (*OpenflowServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFlow",
			Handler:    _Openflow_AddFlow_Handler,
		},
		{
			MethodName: "DelFlow",
			Handler:    _Openflow_DelFlow_Handler,
		},
		{
			MethodName: "SyncFlows",
			Handler:    _Openflow_SyncFlows_Handler,
		},
		{
			MethodName: "DumpBridgePort",
			Handler:    _Openflow_DumpBridgePort_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor_agent_3f2a378016922cd7) }

var fileDescriptor_agent_3f2a378016922cd7 = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4b, 0x6f, 0xd3, 0x40,
	0x10, 0xc6, 0xc5, 0x8d, 0xe3, 0x09, 0xae, 0xaa, 0x51, 0x28, 0xc6, 0xe2, 0x50, 0x59, 0x1c, 0xaa,
	0x8a, 0x46, 0xc2, 0x9c, 0x38, 0xb6, 0x44, 0x95, 0xb8, 0x00, 0xda, 0x48, 0x5c, 0x91, 0x1f, 0x4b,
	0x6a, 0xe1, 0x78, 0x17, 0xef, 0x56, 0x51, 0xef, 0xfc, 0x55, 0xf8, 0x1d, 0x68, 0xd6, 0x0f, 0xd5,
	0x8e, 0xa5, 0x40, 0x7b, 0x9b, 0xd7, 0x37, 0x33, 0x9e, 0xfd, 0x3e, 0xc3, 0x2c, 0x5e, 0xf3, 0x52,
	0x2f, 0x64, 0x25, 0xb4, 0xc0, 0x03, 0x99, 0x84, 0x11, 0x4c, 0x19, 0x57, 0x52, 0x94, 0x8a, 0x23,
	0x82, 0x9d, 0x8a, 0x8c, 0xfb, 0xd6, 0xa9, 0x75, 0xe6, 0x31, 0x63, 0x53, 0x6c, 0xc3, 0xd5, 0xda,
	0x3f, 0x38, 0xb5, 0xce, 0x5c, 0x66, 0xec, 0xf0, 0x1c, 0x8e, 0x2f, 0xb3, 0xec, 0xaa, 0xca, 0xb3,
	0x35, 0x67, 0xfc, 0xe7, 0x2d, 0x57, 0x1a, 0x4f, 0x60, 0x92, 0x98, 0x80, 0x41, 0xbb, 0xac, 0xf1,
	0xa8, 0x76, 0xc9, 0x8b, 0x7f, 0xab, 0xbd, 0x82, 0x79, 0xd7, 0xf7, 0x8b, 0xa8, 0xf4, 0x9e, 0x7a,
	0xda, 0x4d, 0x8a, 0x4a, 0xb7, 0xbb, 0x91, 0x4d, 0x3d, 0xba, 0x79, 0x0f, 0xed, 0x71, 0x0d, 0x47,
	0x97, 0x59, 0x76, 0x5d, 0x88, 0xed, 0x3e, 0xf4, 0x2b, 0xb0, 0xbf, 0x17, 0x62, 0x6b, 0xd0, 0xb3,
	0x68, 0xba, 0x90, 0xc9, 0xc2, 0xc0, 0x4c, 0x94, 0xfa, 0x2c, 0x79, 0xf1, 0xf8, 0x3e, 0xe7, 0x70,
	0xbc, 0xba, 0x2b, 0x53, 0x8a, 0xa8, 0x7d, 0x37, 0xfc, 0x65, 0x81, 0x4d, 0x85, 0x54, 0x90, 0x0a,
	0xf1, 0x23, 0xaf, 0x0b, 0x6c, 0xd6, 0x78, 0x18, 0xc0, 0x54, 0x56, 0xb9, 0xa8, 0x72, 0x7d, 0x67,
	0xc6, 0x79, 0xac, 0xf3, 0x71, 0x0e, 0x87, 0x3a, 0x4e, 0x0a, 0xee, 0x3f, 0x35, 0x89, 0xda, 0x41,
	0x1f, 0x9c, 0x4d, 0xac, 0xd3, 0x1b, 0xae, 0x7c, 0xdb, 0xcc, 0x6a, 0x5d, 0xca, 0xc4, 0xa9, 0xce,
	0x45, 0xa9, 0xfc, 0xc3, 0x3a, 0xd3, 0xb8, 0xe1, 0x6b, 0x70, 0xe9, 0xfa, 0x2b, 0x1d, 0x6b, 0x85,
	0x2f, 0xc0, 0xa1, 0xbb, 0x7e, 0x2b, 0x45, 0x43, 0xad, 0x09, 0xb9, 0x9f, 0x44, 0xf8, 0x01, 0x9e,
	0x2f, 0x6f, 0x37, 0xf2, 0x71, 0xaf, 0x55, 0xc2, 0xc9, 0xb0, 0xc9, 0xff, 0xf1, 0x19, 0xdf, 0x00,
	0x98, 0xfd, 0x14, 0x6d, 0x6b, 0xbe, 0x7d, 0x16, 0x79, 0xf4, 0x06, 0xdd, 0x27, 0x30, 0x57, 0xb6,
	0x66, 0xf4, 0xdb, 0x02, 0xe7, 0xeb, 0x6a, 0x9b, 0xeb, 0xf4, 0x06, 0xdf, 0x82, 0xdb, 0x31, 0x16,
	0xe7, 0x04, 0x19, 0x0a, 0x23, 0x78, 0x46, 0xd1, 0x76, 0xa5, 0xf0, 0x09, 0x41, 0x3a, 0x82, 0xd6,
	0x90, 0xa1, 0x3e, 0x76, 0x20, 0xef, 0xc1, 0xeb, 0xe9, 0x02, 0xfd, 0xde, 0xa4, 0x7b, 0x87, 0x1b,
	0x83, 0xf6, 0xe4, 0x50, 0x43, 0xc7, 0x14, 0x32, 0x84, 0x46, 0x7f, 0x2c, 0x98, 0x7e, 0x96, 0xbc,
	0x24, 0x0a, 0xe2, 0x05, 0x38, 0x8d, 0x24, 0x10, 0x9b, 0xe1, 0xf7, 0x78, 0xbd, 0x33, 0xf6, 0x02,
	0x9c, 0x86, 0xf9, 0x75, 0x79, 0x5f, 0x06, 0x63, 0x37, 0xe9, 0x08, 0x5e, 0xdf, 0x64, 0xc8, 0xf7,
	0x1d, 0xc8, 0x47, 0x38, 0xea, 0xbf, 0x3a, 0xbe, 0x34, 0x83, 0xc6, 0xe8, 0x14, 0x04, 0x63, 0xa9,
	0xb6, 0x55, 0x32, 0x31, 0x7f, 0xc3, 0x77, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x56, 0xf3,
	0x6a, 0x1c, 0x05, 0x00, 0x00,
}
